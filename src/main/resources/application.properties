# Configuration file
quarkus.banner.enabled=false
quarkus.log.level=WARN

# Vaadin
quarkus.index-dependency.elicit.group-id=com.elicitsoftware
quarkus.index-dependency.elicit.artifact-id=elicit-api

# CORS
quarkus.http.cors.enabled=true
quarkus.http.cors.access-control-max-age=1h
quarkus.tls.trust-all=true
quarkus.http.cors.origins=/.*/

# OIDC Configuration - Web Application (default tenant)
quarkus.oidc.auth-server-url=http://host.docker.internal:8180/realms/elicit/
quarkus.oidc.client-id=elicit-admin
quarkus.oidc.credentials.secret=secret
quarkus.oidc.application-type=hybrid
quarkus.oidc.logout.path=/logout
quarkus.oidc.logout.post-logout-path=/

# OIDC Configuration - API Bearer Token Support (api tenant)
quarkus.oidc.api.auth-server-url=http://host.docker.internal:8180/realms/elicit/
quarkus.oidc.api.client-id=elicit-admin
quarkus.oidc.api.application-type=service
quarkus.oidc.api.tenant-paths=/api/*

# HTTP Security Configuration  
# Allow unauthorized view to be public
quarkus.http.auth.permission.unauthorized.paths=/unauthorized
quarkus.http.auth.permission.unauthorized.policy=permit

# Allow logout to be public
quarkus.http.auth.permission.logout.paths=/logout
quarkus.http.auth.permission.logout.policy=permit

# Allow /q/health/ to be public
quarkus.http.auth.permission.health.paths=/q/health/*
quarkus.http.auth.permission.health.policy=permit

# Allow brand static resources to be public
brand.file.system.path=/brand
quarkus.http.auth.permission.brand.paths=/api/brand/*
quarkus.http.auth.permission.brand.policy=permit

# All other paths require authentication - OIDC will handle redirects
quarkus.http.auth.permission.authenticated.paths=/*
quarkus.http.auth.permission.authenticated.policy=authenticated

quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://db:5432/survey?connectTimeout=30&socketTimeout=600&tcpKeepAlive=true
quarkus.datasource.jdbc.max-size=10
quarkus.datasource.jdbc.min-size=2
quarkus.datasource.jdbc.acquisition-timeout=30s
quarkus.datasource.jdbc.background-validation-interval=2m
quarkus.datasource.jdbc.validation-query-sql=SELECT 1
quarkus.datasource.jdbc.leak-detection-interval=10m
quarkus.datasource.username=surveyadmin_user
quarkus.datasource.password=SAOWNERPW
quarkus.datasource.jdbc.transaction-isolation-level=serializable
quarkus.hibernate-orm.packages=com.elicitsoftware.model

# Datasource owner
quarkus.datasource.owner.db-kind=postgresql
quarkus.datasource.owner.jdbc.url=jdbc:postgresql://db:5432/survey?connectTimeout=30&socketTimeout=600&tcpKeepAlive=true
quarkus.datasource.owner.jdbc.min-size=1
quarkus.datasource.owner.jdbc.acquisition-timeout=30s
quarkus.datasource.owner.jdbc.background-validation-interval=2m
quarkus.datasource.owner.jdbc.validation-query-sql=SELECT 1
quarkus.datasource.owner.jdbc.leak-detection-interval=10m
quarkus.datasource.owner.username=elicit_owner
quarkus.datasource.owner.password=SURVEYPW
quarkus.datasource.owner.jdbc.transaction-isolation-level=serializable
quarkus.hibernate-orm."owner".datasource=owner
# this is a fake package
quarkus.hibernate-orm."owner".packages=com.elicitsoftware.model.owner

#Flyway
quarkus.flyway.owner.schemas=survey
quarkus.flyway.owner.migrate-at-start=true
quarkus.flyway.owner.baseline-on-migrate=true
quarkus.flyway.owner.validate-on-migrate=true
quarkus.flyway.owner.baseline-version=0
quarkus.flyway.owner.baseline-description=Empty Database
quarkus.flyway.owner.connect-retries=10
quarkus.flyway.owner.table=flyway_admin_history
quarkus.flyway.owner.placeholders.surveyadmin_user=surveyadmin_user
quarkus.flyway.owner.placeholders.survey_user=survey_user
quarkus.flyway.owner.placeholders.surveyadmin_owner=elicit_owner
quarkus.flyway.owner.locations=db/migration,db/dev

# HTTP Headers
quarkus.http.header."Strict-Transport-Security".path=/api/*
quarkus.http.header."Strict-Transport-Security".methods=POST, GET, OPTIONS, DELETE, PUT
quarkus.http.header."Strict-Transport-Security".value=max-age=31536000; includeSubDomains;

# Default Image
quarkus.container-image.tag=latest
quarkus.container-image.registry=docker.io
quarkus.container-image.group=elicitsoftware
quarkus.container-image.name=admin
quarkus.container-image.build=true
quarkus.container-image.push=true


#Dev properties
# for local network testing.
#quarkus.http.host=0.0.0.0
%dev.quarkus.http.port=8081
%dev.quarkus.log.level=INFO
%dev.quarkus.oidc.auth-server-url=http://localhost:8180/realms/elicit/
%dev.quarkus.oidc.api.auth-server-url=http://localhost:8180/realms/elicit/
%dev.quarkus.hibernate-orm.log.sql=false
%dev.quarkus.transaction-manager.default-transaction-timeout=300
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5452/survey
%dev.quarkus.datasource.owner.jdbc.url=jdbc:postgresql://localhost:5452/survey

# Setup a simple SMTP connection.
# If you need to track delivery you can use a service like SendGrid.
# For configuration options see https://quarkus.io/guides/mailer-reference#popular
%dev.quarkus.mailer.from=elicit@localhost
%dev.quarkus.mailer.host=localhost
%dev.quarkus.mailer.port=1025
%dev.quarkus.mailer.tls=false
#%dev.quarkus.mailer.auth-methods=
#%dev.quarkus.mailer.username=
#%dev.quarkus.mailer.password=

# Docker
%docker.quarkus.container-image.push=false
%docker.quarkus.container-image.build=true
%docker.maven.test.skip=true

# Test properties
# quarkus.http.test-port=8090
# %test.token.autoRegister=true
# %test.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5452/survey_test?connectTimeout=30&socketTimeout=600&tcpKeepAlive=true
# %test.quarkus.datasource.owner.jdbc.url=jdbc:postgresql://localhost:5452/survey_test?connectTimeout=30&socketTimeout=600&tcpKeepAlive=true
# %test.quarkus.flyway.owner.enabled=true
# %test.quarkus.flyway.owner.schemas=survey_test
# %test.quarkus.flyway.owner.placeholders.surveyreport_user=surveyreport_user
# %test.quarkus.flyway.owner.locations=db/migration,db/test
